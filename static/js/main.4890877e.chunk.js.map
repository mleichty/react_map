{"version":3,"sources":["LeftSide.js","RightSide.js","App.js","serviceWorker.js","index.js"],"names":["LeftSide","props","state","location1","location2","location3","location4","location5","styleLancaster","backgroundColor","padding","borderRadius","border","width","cursor","display","margin","color","styleHockessin","styleCincinnati","styleCharlotte","styleIndianapolis","location","this","clicked","nextProps","nextState","locationNew","e","setTimeout","changeClass","prevProps","setState","className","style","onClick","sidebarClick","Component","RightSide","left","top","height","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","position","popup","pin1","pin2","pin3","pin4","pin5","console","log","json","mapClick","clickedNew","i","App","locations","lancaster","hockessin","cincinnati","charlotte","indianapolis","fetch","then","result","data","name","xLocation","sendLocation","sendLocationNew","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4890877e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './LeftSide.css';\r\n\r\nclass LeftSide extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n\r\n            //this is for left-to-right interaction**\r\n            //this stores the value to send to the right side when clicked\r\n            location1: \"Lancaster\",\r\n            location2: \"Hockessin\",\r\n            location3: \"Cincinnati\",\r\n            location4: \"Charlotte\",\r\n            location5: \"Indianapolis\",\r\n\r\n            //this is for right-to-left interaction**\r\n            // how do I set the same values for different states?\r\n            //this sets the original styles for the buttons\r\n            styleLancaster: {\r\n                backgroundColor: \"black\",\r\n                padding: \"15px\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid gray\",\r\n                width: \"30%\",\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                margin: \"0 auto\",\r\n                color: \"white\"\r\n            },\r\n\r\n            styleHockessin: {\r\n                backgroundColor: \"black\",\r\n                padding: \"15px\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid gray\",\r\n                width: \"30%\",\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                margin: \"0 auto\",\r\n                color: \"white\"\r\n            },\r\n\r\n            styleCincinnati: {\r\n                backgroundColor: \"black\",\r\n                padding: \"15px\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid gray\",\r\n                width: \"30%\",\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                margin: \"0 auto\",\r\n                color: \"white\"\r\n            },\r\n\r\n            styleCharlotte: {\r\n                backgroundColor: \"black\",\r\n                padding: \"15px\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid gray\",\r\n                width: \"30%\",\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                margin: \"0 auto\",\r\n                color: \"white\"\r\n            },\r\n\r\n            styleIndianapolis: {\r\n                backgroundColor: \"black\",\r\n                padding: \"15px\",\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid gray\",\r\n                width: \"30%\",\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                margin: \"0 auto\",\r\n                color: \"white\"\r\n            }\r\n        }\r\n    }\r\n\r\n    //this is for left-to-right interaction**\r\n    //this sends the clicked option to the right side\r\n    sidebarClick(location) {\r\n        this.props.clicked(location);\r\n    }\r\n\r\n    //this is for right-to-left interaction**\r\n    //this updates the component after the first option is clicked when the original \r\n    // value is an empty string then calls the same functions as the last\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (this.props.locationNew === \"\"){\r\n            var e = this.props.locationNew\r\n            setTimeout( () => { this.changeClass(e) }, 10);\r\n        }\r\n    }\r\n\r\n    // this updates the component if another option is clicked\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.locationNew !== prevProps.locationNew) {\r\n            var e = this.props.locationNew\r\n            setTimeout( () => { this.changeClass(e) }, 10);\r\n        }\r\n    }\r\n\r\n    //this changes the styles for the buttons when the pin on the right side is clicked\r\n    changeClass(e) {\r\n        if (e === \"Lancaster\") {\r\n            this.setState({\r\n                styleLancaster: {\r\n                    backgroundColor: \"red\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"2px solid gray\",\r\n                    width: \"30%\",\r\n                    cursor: \"pointer\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"black\"\r\n                }\r\n            })\r\n        } else if (e === \"Hockessin\") {\r\n            this.setState({\r\n                styleHockessin: {\r\n                    backgroundColor: \"red\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"2px solid gray\",\r\n                    width: \"30%\",\r\n                    cursor: \"pointer\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"black\"\r\n                }\r\n            })\r\n        } else if (e === \"Cincinnati\") {\r\n            this.setState({\r\n                styleCincinnati: {\r\n                    backgroundColor: \"red\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"2px solid gray\",\r\n                    width: \"30%\",\r\n                    cursor: \"pointer\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"black\"\r\n                }\r\n            })\r\n        } else if (e === \"Charlotte\") {\r\n            this.setState({\r\n                styleCharlotte: {\r\n                    backgroundColor: \"red\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"2px solid gray\",\r\n                    width: \"30%\",\r\n                    cursor: \"pointer\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"black\"\r\n                }\r\n            })\r\n        } else if (e === \"Indianapolis\") {\r\n            this.setState({\r\n                styleIndianapolis: {\r\n                    backgroundColor: \"red\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"2px solid gray\",\r\n                    width: \"30%\",\r\n                    cursor: \"pointer\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    color: \"black\"\r\n                }\r\n            })\r\n        }        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"leftSide\">\r\n\r\n                <h2>Places I've Lived</h2>\r\n                \r\n                    <button style={this.state.styleLancaster} onClick={() => { this.sidebarClick(this.state.location1) }}>{ this.state.location1 }</button>\r\n                    <button style={this.state.styleHockessin} onClick={() => { this.sidebarClick(this.state.location2) }}>{ this.state.location2 }</button>\r\n                    <button style={this.state.styleCincinnati} onClick={() => { this.sidebarClick(this.state.location3) }}>{ this.state.location3 }</button>\r\n                    <button style={this.state.styleCharlotte} onClick={() => { this.sidebarClick(this.state.location4) }}>{ this.state.location4 }</button>\r\n                    <button style={this.state.styleIndianapolis} onClick={() => { this.sidebarClick(this.state.location5) }}>{ this.state.location5 }</button>\r\n                \r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LeftSide;","import React, { Component } from 'react';\r\nimport './RightSide.css';\r\n\r\nclass RightSide extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n\r\n            //this is all for left-to-right interaction**\r\n            // points: [\r\n            //     {x: 740, y: 110},\r\n            //     {x: 750, y: 120},\r\n            //     {x: 660, y: 130},\r\n            //     {x: 690, y: 190},\r\n            //     {x: 630, y: 130}\r\n            // ],\r\n\r\n            //this sets the original styles for the divs\r\n\r\n            styleLancaster: {\r\n                // if I try calling this.props.json.locations.xLocation, nothing happens:(\r\n                left: 740,\r\n                top: 110,\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                backgroundImage: \"url(\" + \"./images/pin.png\" +\")\",\r\n                backgroundSize: \"cover\",\r\n                backgroundRepeat: \"noRepeat\",\r\n                backgroundPosition: \"center\",\r\n                position: \"absolute\",\r\n                cursor: \"pointer\"\r\n            },\r\n\r\n            styleHockessin: {\r\n                left: 750,\r\n                top: 120,\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                backgroundImage: \"url(\" + \"./images/pin.png\" +\")\",\r\n                backgroundSize: \"cover\",\r\n                backgroundRepeat: \"noRepeat\",\r\n                backgroundPosition: \"center\",\r\n                position: \"absolute\",\r\n                cursor: \"pointer\"\r\n            },\r\n\r\n            styleCincinnati: {\r\n                left: 660,\r\n                top: 130,\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                backgroundImage: \"url(\" + \"./images/pin.png\" +\")\",\r\n                backgroundSize: \"cover\",\r\n                backgroundRepeat: \"noRepeat\",\r\n                backgroundPosition: \"center\",\r\n                position: \"absolute\",\r\n                cursor: \"pointer\"\r\n            },\r\n\r\n            styleCharlotte: {\r\n                left: 690,\r\n                top: 190,\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                backgroundImage: \"url(\" + \"./images/pin.png\" +\")\",\r\n                backgroundSize: \"cover\",\r\n                backgroundRepeat: \"noRepeat\",\r\n                backgroundPosition: \"center\",\r\n                position: \"absolute\",\r\n                cursor: \"pointer\"\r\n            },\r\n\r\n            styleIndianapolis: {\r\n                left: 630,\r\n                top: 130,\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                backgroundImage: \"url(\" + \"./images/pin.png\" +\")\",\r\n                backgroundSize: \"cover\",\r\n                backgroundRepeat: \"noRepeat\",\r\n                backgroundPosition: \"center\",\r\n                position: \"absolute\",\r\n                cursor: \"pointer\"\r\n            },\r\n\r\n            //this is for left-to-right interaction AND left-to-left**\r\n            //this intitializes the popup div\r\n            popup: {},\r\n\r\n            //this is all for right-to-left interaction**\r\n            //this stores the state of the pin so when clicked, it sends this value to the left side\r\n            pin1: \"Lancaster\",\r\n            pin2: \"Hockessin\",\r\n            pin3: \"Cincinnati\",\r\n            pin4: \"Charlotte\",\r\n            pin5: \"Indianapolis\"\r\n        }\r\n    }\r\n\r\n    //this is all for left-to-right interaction**\r\n    //this updates the component after the first option is clicked when the original \r\n    //value is an empty string\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (this.props.location === \"\"){\r\n            var e = this.props.location\r\n            setTimeout( () => { this.changeClass(e) }, 10);\r\n        }\r\n    }\r\n\r\n    // this updates the component if another option is clicked\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.location !== prevProps.location) {\r\n            var e = this.props.location\r\n            setTimeout( () => { this.changeClass(e) }, 10);\r\n\r\n            // how do I change the other classes back when one is highlighted?\r\n            // var x = prevProps.location\r\n            // setTimeout( () => { this.changeClassBack(e, x) }, 10);\r\n        }\r\n    }\r\n\r\n    //this function is called when the props from the left changes\r\n    //this resets the pin styles as well as the popup styles\r\n    changeClass(e) {\r\n        if (e === \"Lancaster\") {\r\n            this.setState({\r\n                styleLancaster: {\r\n                    left: 740,\r\n                    top: 110,\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    backgroundImage: \"url(\" + \"./images/pinRed.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\",\r\n                    cursor: \"pointer\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/lancaster.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if (e === \"Hockessin\") {\r\n            this.setState({\r\n                styleHockessin: {\r\n                    left: 750,\r\n                    top: 120,\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    backgroundImage: \"url(\" + \"./images/pinRed.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\",\r\n                    cursor: \"pointer\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/hockessin.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if (e === \"Cincinnati\") {\r\n            this.setState({\r\n                styleCincinnati: {\r\n                    left: 660,\r\n                    top: 130,\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    backgroundImage: \"url(\" + \"./images/pinRed.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\",\r\n                    cursor: \"pointer\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/cincinnati.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if (e === \"Charlotte\") {\r\n            this.setState({\r\n                styleCharlotte: {\r\n                    left: 690,\r\n                    top: 190,\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    backgroundImage: \"url(\" + \"./images/pinRed.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\",\r\n                    cursor: \"pointer\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/charlotte.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if (e === \"Indianapolis\") {\r\n            this.setState({\r\n                styleIndianapolis: {\r\n                    left: 630,\r\n                    top: 130,\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    backgroundImage: \"url(\" + \"./images/pinRed.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\",\r\n                    cursor: \"pointer\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/indianapolis.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        }        \r\n    }\r\n    //this is all for left-to-right interaction**\r\n\r\n    \r\n\r\n    render() {\r\n        // console.log(this.props.location);\r\n        console.log(this.props.json);\r\n\r\n        return (\r\n            <div className=\"rightSide\">\r\n                {/* how do I store these points in something like a PointStore\r\n                and automatically load them?? */}\r\n                {/* <div className=\"points\"> */}\r\n                    <div style={this.state.styleLancaster} onClick={() => { this.mapClick(this.state.pin1) }}></div>\r\n                    <div style={this.state.styleHockessin} onClick={() => { this.mapClick(this.state.pin2) }}></div>\r\n                    <div style={this.state.styleCincinnati} onClick={() => { this.mapClick(this.state.pin3) }}></div>\r\n                    <div style={this.state.styleCharlotte} onClick={() => { this.mapClick(this.state.pin4) }}></div>\r\n                    <div style={this.state.styleIndianapolis} onClick={() => { this.mapClick(this.state.pin5) }}></div>\r\n                    <div style={this.state.popup}></div>\r\n                {/* </div> */}\r\n            </div>\r\n        );\r\n      }\r\n\r\n      //this is all for right-to-left interaction AND left-to-left for popup**\r\n      mapClick(locationNew) {\r\n        this.props.clickedNew(locationNew);\r\n        var i = locationNew;\r\n\r\n        if ( i === \"Lancaster\") {\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/lancaster.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if ( i === \"Hockessin\") {\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/hockessin.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if ( i === \"Cincinnati\") {\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/cincinnati.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if ( i === \"Charlotte\") {\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/charlotte.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        } else if ( i === \"Indianapolis\") {\r\n            this.setState({\r\n                popup: {\r\n                    left: 5,\r\n                    top: 5,\r\n                    width: \"50%\",\r\n                    height: \"90%\",\r\n                    backgroundImage: \"url(\" + \"./images/indianapolis.png\" +\")\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"noRepeat\",\r\n                    backgroundPosition: \"center\",\r\n                    position: \"absolute\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default RightSide;","import React, { Component } from 'react';\nimport './App.css';\nimport LeftSide from './LeftSide.js';\nimport RightSide from './RightSide.js';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //this is for left-to-right interaction**\n      location: \"\",\n\n      //this is for right-to-left interaction**\n      locationNew: \"\",\n\n      //initialize JSON data\n      locations: {\n        lancaster: \"\",\n        hockessin: \"\",\n        cincinnati: \"\",\n        charlotte: \"\",\n        indianapolis: \"\"\n      }\n    }\n\n    // NEED TO GET JSON TO LOAD\n        //load in the JSON\n        //called JSON promise, takes result and turns into JSON\n        fetch(\"data/locations.json\")\n          .then((result) => result.json())\n          .then((data) => {\n            //can get to JSON entry by calling data.name.value or data.name[array#]\n            console.log(data.cincinnati.name);\n\n            //rendering twice once without, once with values then pass to left and right side components\n            this.setState({ locations: data });\n          })\n  }\n\n  //this is for left-to-right interaction**\n  sendLocation(location) {\n    console.log(location);\n\n    this.setState({\n      location: location\n    })\n  }\n\n  //this is for right-to-left interaction**\n  sendLocationNew(locationNew) {\n    console.log(locationNew);\n\n    this.setState({\n      locationNew: locationNew\n    })\n  }\n\n  render() {\n    console.log(this.state.locations.lancaster.xLocation)\n\n    return (\n      <div className=\"App\">\n        <LeftSide json = { this.state.locations } locationNew = { this.state.locationNew } clicked = { (location) => {this.sendLocation(location)}}/>\n\n        <RightSide json = { this.state.locations } location = { this.state.location } clickedNew = { (locationNew) => {this.sendLocationNew(locationNew)} }/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}